name: Build iOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Godot
      run: |
        wget https://github.com/godotengine/godot/releases/download/3.5.3-stable/Godot_v3.5.3-stable_osx.universal.zip
        unzip Godot_v3.5.3-stable_osx.universal.zip -d godot
        sudo mv godot/Godot.app /Applications/Godot.app
        sudo ln -s /Applications/Godot.app/Contents/MacOS/Godot /usr/local/bin/godot

    - name: Download Godot Export Templates
      run: |
        mkdir -p ~/Library/Application\ Support/Godot/templates/3.5.3.stable
        cd ~/Library/Application\ Support/Godot/templates/3.5.3.stable
        wget https://github.com/godotengine/godot/releases/download/3.5.3-stable/Godot_v3.5.3-stable_export_templates.tpz
        tar -xzf Godot_v3.5.3-stable_export_templates.tpz -C ~/Library/Application\ Support/Godot/templates/3.5.3.stable
        cd templates
        mv * ..
        cd ..
        ls

    - name: Create build directory
      run: mkdir -p build

    - name: Export iOS project
      run: godot --export "iOS" build/your_project_name.xcodeproj
      env:
        DISPLAY: :99.0
        
    - name: Set iOS Deployment Target
      run: sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 10.0;/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/' build/your_project_name.xcodeproj/project.pbxproj


    - name: Build iOS project
      run: xcodebuild -project build/your_project_name.xcodeproj -scheme your_project_name -configuration Development -archivePath build/your_project_name.xcarchive archive \ CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    - name: Prepare exportOptions.plist
      run: |
        echo '<?xml version="1.0" encoding="UTF-8"?>' > exportOptions.plist
        echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> exportOptions.plist
        echo '<plist version="1.0">' >> exportOptions.plist
        echo '<dict>' >> exportOptions.plist
        echo '    <key>method</key>' >> exportOptions.plist
        echo '    <string>ad-hoc</string>' >> exportOptions.plist
        echo '    <key>signingStyle</key>' >> exportOptions.plist
        echo '    <string>manual</string>' >> exportOptions.plist
        echo '</dict>' >> exportOptions.plist
        echo '</plist>' >> exportOptions.plist

    - name: Export IPA
      run: xcodebuild -exportArchive -archivePath build/your_project_name.xcarchive -exportPath build -exportOptionsPlist exportOptions.plist

    - name: Upload IPA to GitHub Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: your_project_name.ipa
        path: build/your_project_name.ipa
